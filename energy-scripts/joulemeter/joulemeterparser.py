#! /usr/bin/python
# -*- coding: utf-8 -*-

import os
import pprint
import csv
import sys

DELIMITER_CSV = ';'
TIME_STAMP_KEY = "TimeStamp (ms)"
WATTS_KEY = " Application (W)"

def read_datafile(csvfile):
	""" Get all data from .csv file generated by JouleMeter """
	data = []
	with open(csvfile, 'r') as f:
		lines = f.readlines()
	lines[0] = lines[0].replace(',', DELIMITER_CSV)	 # change coma by semicolon in headers line

	r = csv.DictReader(lines, delimiter=DELIMITER_CSV)
	for line in r:
		data.append(line)

	return data

def get_application_data(data):
	""" Filter application data """
	data = filter(lambda x: not x[WATTS_KEY].startswith("Waiting"), data)
	data = filter(lambda x: not x[WATTS_KEY] == "--", data)
	applicationData = list(filter(lambda x: x[WATTS_KEY] != "0,0", data))

	return applicationData

def get_delta_times(data):
	""" Get the intervals of time (ms) """
	appData = get_application_data(data)
	first_timestamp = int(next(filter(lambda x: x[WATTS_KEY] == "0,0", data))[TIME_STAMP_KEY])
	timestamps = [int(x[TIME_STAMP_KEY]) for x in appData]
	timestamps = [first_timestamp] + timestamps
	delta_times = [y - x for x, y in zip(timestamps, timestamps[1:])]
	return delta_times

def get_watts(appData):
	""" Get the watts consumed in each interval (W) """
	watts = [x[WATTS_KEY] for x in appData]
	watts = list(map(lambda x: float(x.replace(",", ".")), watts))
	return watts

def calculate_energy(data):
	""" Calculate energy consumption
	return (computational time, total joules, watts)
	"""
	appData = get_application_data(data)

	delta_times = get_delta_times(data)
	delta_times_seconds = list(map(lambda x: x/1000, delta_times))

	watts_times = get_watts(appData)
	joules = [x*y for x, y in zip(watts_times, delta_times_seconds)]

	computational_time = sum(delta_times_seconds)
	consumed_energy = sum(joules)
	watts = consumed_energy/computational_time

	print("Computational time (s): ", computational_time)
	print("Consumed energy (J): ", consumed_energy)
	print("Consumed power (W): ", watts)

if __name__ == "__main__":
	if len(sys.argv) != 2:
		print("Usage:")
		print("python joulemeterparser.py <filename>")
	else:
		filename = sys.argv[1]
		data = read_datafile(filename)
		calculate_energy(data)
